# Generated by Django 5.0.4 on 2024-05-04 14:36

import django.db.models.deletion
import shop.utils
import shop.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Used for the image's alt attribute", max_length=100, unique=True)),
                ('variant', models.CharField(blank=True, max_length=100, null=True)),
                ('original', models.ImageField(upload_to=shop.utils.image_path)),
                ('is_main_image', models.BooleanField(default=False)),
                ('created_on', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_on', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Used for the video alt attribute', max_length=100, unique=True)),
                ('content', models.FileField(upload_to=shop.utils.video_path, validators=[shop.validators.validate_video_file_extension])),
                ('created_on', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(choices=[('Prints', 'Prints'), ('Black', 'Black'), ('Beige', 'Beige'), ('Camel', 'Camel'), ('Charcoal', 'Charcoal'), ('Cream', 'Cream'), ('Green', 'Green'), ('Grey', 'Grey'), ('Kaki', 'Kaki'), ('Marine', 'Marine'), ('Navy', 'Navy'), ('Orange', 'Orange'), ('Pink', 'Pink'), ('Red', 'Red'), ('Taupe', 'Taupe'), ('White', 'White'), ('Yellow', 'Yellow')], default='Black', help_text='Product available colors', max_length=100)),
                ('sku', models.CharField(blank=True, help_text='Stock Keeping Unit', max_length=100, null=True, unique=True)),
                ('category', models.CharField(choices=[('A-line', 'A-line'), ('Apron', 'Apron'), ('Babydoll', 'Babydoll'), ('Balconette', 'Balconette'), ('Ball gown', 'Ball gown'), ('Bikini', 'Bikini'), ('Blouson', 'Blouson'), ('Bodycon', 'Bodycon'), ('Bodyshort', 'Bodyshort'), ('Bouffont', 'Bouffont'), ('Bralette', 'Bralette'), ('Brazilian', 'Brazilian'), ('Brief', 'Brief'), ('Bubble', 'Bubble'), ('Bullet', 'Bullet'), ('Control brief', 'Control brief'), ('Corset', 'Corset'), ('Drop waist', 'Drop waist'), ('Empire', 'Empire'), ('Front fastening', 'Front fastening'), ('Full cup', 'Full cup'), ('G-String', 'G-String'), ('Half cup', 'Half cup'), ('Halter', 'Halter'), ('Hipster', 'Hipster'), ('Jumper', 'Jumper'), ('Minimizer', 'Minimizer'), ('Not attributed', 'Not attributed'), ('Nursing', 'Nursing'), ('One shoulder', 'One shoulder'), ('Peasant', 'Peasant'), ('Pegged', 'Pegged'), ('Peplum', 'Peplum'), ('Plunge', 'Plunge'), ('Princess', 'Princess'), ('Seamless', 'Seamless'), ('Sheath', 'Sheath'), ('Shift', 'Shift'), ('Shirt', 'Shirt'), ('Sleep bra', 'Sleep bra'), ('Slit', 'Slit'), ('Soft cup', 'Soft cup'), ('Sports', 'Sports'), ('Strapless', 'Strapless'), ('Strapless', 'Strapless'), ('Sun', 'Sun'), ('T-Shirt', 'T-Shirt'), ('Tent', 'Tent'), ('Thong', 'Thong'), ('Trapezoid', 'Trapezoid'), ('Triangle', 'Triangle'), ('Tunic', 'Tunic'), ('Underwire', 'Underwire'), ('V-line', 'V-line'), ('Wired', 'Wired'), ('Wrap', 'Wrap'), ('Yoke', 'Yoke'), ('A-line', 'A-line'), ('Apron', 'Apron'), ('Babydoll', 'Babydoll'), ('Balconette', 'Balconette'), ('Ball gown', 'Ball gown'), ('Bikini', 'Bikini'), ('Blouson', 'Blouson'), ('Bodycon', 'Bodycon'), ('Bodyshort', 'Bodyshort'), ('Bouffont', 'Bouffont'), ('Bralette', 'Bralette'), ('Brazilian', 'Brazilian'), ('Brief', 'Brief'), ('Bubble', 'Bubble'), ('Bullet', 'Bullet'), ('Control brief', 'Control brief'), ('Corset', 'Corset'), ('Drop waist', 'Drop waist'), ('Empire', 'Empire'), ('Front fastening', 'Front fastening'), ('Full cup', 'Full cup'), ('G-String', 'G-String'), ('Half cup', 'Half cup'), ('Halter', 'Halter'), ('Hipster', 'Hipster'), ('Jumper', 'Jumper'), ('Minimizer', 'Minimizer'), ('Not attributed', 'Not attributed'), ('Nursing', 'Nursing'), ('One shoulder', 'One shoulder'), ('Peasant', 'Peasant'), ('Pegged', 'Pegged'), ('Peplum', 'Peplum'), ('Plunge', 'Plunge'), ('Princess', 'Princess'), ('Seamless', 'Seamless'), ('Sheath', 'Sheath'), ('Shift', 'Shift'), ('Shirt', 'Shirt'), ('Sleep bra', 'Sleep bra'), ('Slit', 'Slit'), ('Soft cup', 'Soft cup'), ('Sports', 'Sports'), ('Strapless', 'Strapless'), ('Strapless', 'Strapless'), ('Sun', 'Sun'), ('T-Shirt', 'T-Shirt'), ('Tent', 'Tent'), ('Thong', 'Thong'), ('Trapezoid', 'Trapezoid'), ('Triangle', 'Triangle'), ('Tunic', 'Tunic'), ('Underwire', 'Underwire'), ('V-line', 'V-line'), ('Wired', 'Wired'), ('Wrap', 'Wrap'), ('Yoke', 'Yoke')], default=('Not attributed', 'Not attributed'), help_text="The product's main category", max_length=100)),
                ('unit_price', models.DecimalField(decimal_places=2, default=1, help_text='Cost value of the product', max_digits=5, validators=[shop.validators.price_validator])),
                ('sale_value', models.PositiveIntegerField(default=0, help_text='The current sale value for the product')),
                ('sale_price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('on_sale', models.BooleanField(default=False)),
                ('display_new', models.BooleanField(default=False, help_text='Show the product as new')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('active', models.BooleanField(default=False)),
                ('modified_on', models.DateField(auto_now_add=True)),
                ('created_on', models.DateField(auto_now=True)),
                ('images', models.ManyToManyField(blank=True, to='shop.image')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.video')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name', '-created_on'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('products', models.ManyToManyField(blank=True, to='shop.product')),
            ],
            options={
                'verbose_name': 'Like',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('products', models.ManyToManyField(blank=True, to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wishlist',
            },
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(fields=('user',), name='one_list_per_user'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name', 'sku', 'category'], name='shop_produc_name_21f200_idx'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('name', 'color'), name='unique_name_with_color'),
        ),
        migrations.AddConstraint(
            model_name='wishlist',
            constraint=models.UniqueConstraint(fields=('name', 'user'), name='unique_list_name_per_user'),
        ),
    ]
