{"version":3,"file":"js/590.031f98ce.js","mappings":"6KAYe,SAASA,EAAmBC,EAAKC,GAC9C,MAAMC,GAAYC,EAAAA,EAAAA,KAAI,GAKtBC,eAAeC,IACb,MAAMC,GAAQC,EAAAA,EAAAA,KAEd,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,KAAa,kBAAiBH,EAAMI,eAAeC,MAE1EC,KAAKC,gBAAkBL,EAASM,KAAKC,SACrCH,KAAKI,QAAUR,EAASM,KAAKE,QAI7BJ,KAAKK,oBAAsBT,EAASM,KAAKI,qBAEzChB,EAAUiB,OAAQ,EAClB,MAAOC,GACPd,EAAMe,gBAAgB,yDAQ1BjB,eAAekB,IACb,MAAMhB,GAAQC,EAAAA,EAAAA,KAEd,IAGE,MAAMgB,EAAiBtB,EAAMuB,OAAOC,WACpC,IAAIjB,EAAW,KAGbA,EADqB,QAAnBe,QACed,EAAAA,EAAAA,IAAW,yBAMXA,EAAAA,EAAAA,IAAY,eAAcc,KAG7CjB,EAAMoB,QAAQC,IACZA,EAAMC,yBAA2BpB,EAASM,KAC1Ca,EAAME,SAAWF,EAAMC,yBAAyBE,QAChD9B,EAAI+B,WAAWC,OAAOC,iBAAiBC,cAAcC,OAAO,WAAYR,EAAME,UAC9E7B,EAAI+B,WAAWC,OAAOC,iBAAiBG,SAASD,OAAO,WAAY3B,EAASM,SAE9E,MAAOM,GACPiB,QAAQjB,MAAMA,GACdd,EAAMe,gBAAgB,+DAI1B,SAASiB,IACPtC,EAAIuC,KAAK,cACTjB,IACAtB,EAAIuC,KAAK,YAGX,MAAO,CACLrC,YACAoB,kBACAjB,yBACAiC,iB,0HCjFFE,EAAAA,EAAAA,IAES,UAFDC,MAAM,2BAA4BC,QAAK,oBAAEC,EAAAA,aAAAA,EAAAA,eAAAA,KAAjD,EACEC,EAAAA,EAAAA,IAAaC,EAAAA,OAAA,a,uBAUjB,GACEC,KAAM,uBACNC,MAAO,CAAC,aAAc,YACtBC,QACE,MAAMhD,GAAMiD,EAAAA,EAAAA,MACNhD,GAAQiD,EAAAA,EAAAA,OACR,YAAEZ,IAAgBvC,EAAAA,EAAAA,GAAkBC,EAAKC,GAC/C,MAAO,CACLqC,iB,QCfN,MAAMa,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://front2/./src/composables/shop.js","webpack://front2/./src/layouts/shop/BasePaginationButton.vue","webpack://front2/./src/layouts/shop/BasePaginationButton.vue?c69e"],"sourcesContent":["/**\r\n * Implements functionnalities for components\r\n * and views that require working with products\r\n * in the backend\r\n * \r\n */\r\n\r\nimport { ref } from 'vue'\r\nimport { useShop } from '../store/shop'\r\n\r\nimport { client } from '../plugins/axios'\r\n\r\nexport default function useShopComposable (app, route) {\r\n  const isLoading = ref(true)\r\n\r\n  /**\r\n   * Get variants for a specific product\r\n   */\r\n  async function requestProductVariants () {\r\n    const store = useShop()\r\n\r\n    try {\r\n      const response = await client.post(`/shop/products/${store.currentProduct.id}`)\r\n\r\n      this.productVariants = response.data.variants\r\n      this.reviews = response.data.reviews\r\n\r\n      // TODO: If the recommended products is below 1, maybe propose\r\n      // and alternative set of items to the user\r\n      this.recommendedProducts = response.data.recommended_products\r\n\r\n      isLoading.value = false\r\n    } catch (error) {\r\n      store.addErrorMessage('V-AX-PV - Could not get the current product variants')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request products from a given\r\n   * collection\r\n   */\r\n  async function productsRequest () {\r\n    const store = useShop()\r\n\r\n    try {\r\n      // Sends a request to get the backend\r\n      // without sending an emit\r\n      const collectionName = route.params.collection\r\n      let response = null\r\n\r\n      if (collectionName === 'all') {\r\n        response = await client.get('/collection/all')\r\n      } else {\r\n        // FIXME: When reloading thee product page\r\n        // the collectionName is undefineed making the\r\n        // product page not being able to retrieve the\r\n        // variants\r\n        response = await client.get(`/collection/${collectionName}`)\r\n      }\r\n\r\n      store.$patch((state) => {\r\n        state.originalProductsResponse = response.data\r\n        state.products = state.originalProductsResponse.results\r\n        app.appContext.config.globalProperties.$localstorage.create('products', state.products)\r\n        app.appContext.config.globalProperties.$session.create('products', response.data)\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n      store.addErrorMessage('V-AX-PR - An error occured while trying get the collection')\r\n    }\r\n  }\r\n\r\n  function getProducts () {\r\n    app.emit('start-load')\r\n    productsRequest()\r\n    app.emit('end-load')\r\n  }\r\n\r\n  return {\r\n    isLoading,\r\n    productsRequest,\r\n    requestProductVariants,\r\n    getProducts\r\n  }\r\n}\r\n","<template>\r\n  <button class=\"btn btn-lg btn-secondary\" @click=\"getProducts\">\r\n    <slot></slot>\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nimport { getCurrentInstance } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\n\r\nimport useShopComposable from '../../composables/shop'\r\n\r\nexport default {\r\n  name: 'BasePaginationButton',\r\n  emits: ['start-load', 'end-load'],\r\n  setup () {\r\n    const app = getCurrentInstance()\r\n    const route = useRoute()\r\n    const { getProducts } = useShopComposable(app, route)\r\n    return {\r\n      getProducts\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { render } from \"./BasePaginationButton.vue?vue&type=template&id=685fd5f5\"\nimport script from \"./BasePaginationButton.vue?vue&type=script&lang=js\"\nexport * from \"./BasePaginationButton.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\coding\\\\websites\\\\mycommerce\\\\front2\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["useShopComposable","app","route","isLoading","ref","async","requestProductVariants","store","useShop","response","client","currentProduct","id","this","productVariants","data","variants","reviews","recommendedProducts","recommended_products","value","error","addErrorMessage","productsRequest","collectionName","params","collection","$patch","state","originalProductsResponse","products","results","appContext","config","globalProperties","$localstorage","create","$session","console","getProducts","emit","_createElementBlock","class","onClick","$setup","_renderSlot","_ctx","name","emits","setup","getCurrentInstance","useRoute","__exports__","render"],"sourceRoot":""}