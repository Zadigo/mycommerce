# Generated by Django 5.1.4 on 2025-04-26 13:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shop', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(help_text='Unique session identifier for anonymous carts in particular', max_length=400)),
                ('order_reference', models.CharField(blank=True, help_text='A customer order reference which can be used to link a cart item to an order', max_length=100, null=True)),
                ('size', models.CharField(blank=True, choices=[('Unique', 'Unique'), ('XXS', 'XXS'), ('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL')], default='Unique', max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_stale', models.BooleanField(default=False, help_text='Previous products from an authenticated user on which no actions were performed')),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_paid_for', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('user', models.ForeignKey(blank=True, help_text='Identifies a logged in user', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Carts',
                'ordering': ['-created_on', '-pk'],
                'abstract': False,
                'indexes': [models.Index(condition=models.Q(('is_paid_for', True)), fields=['is_paid_for'], name='is_paid_for_carts')],
                'constraints': [models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='cart_price_over_zero')],
            },
        ),
    ]
